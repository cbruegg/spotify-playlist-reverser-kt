name: release

on:
  push:
    tags:
      - "v*"

jobs:

  create-release:
    name: create release
    runs-on: ubuntu-latest
    # Note this. We are going to use that in further jobs.
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

  # This job builds and uploads binary
  build-and-upload:
    name: build and upload
    needs: create-release # we need to know the upload URL

    strategy:
      matrix:
        os: [ windows-latest, macos-latest, ubuntu-latest ]
        gu-binary: [ gu, gu.cmd ]
        exclude:
          - os: ubuntu-latest
            gu-binary: gu.cmd
          - os: macos-latest
            gu-binary: gu.cmd
          - os: windows-latest
            gu-binary: gu
    runs-on: ${{ matrix.os }}

    steps:
      - name: checkout
        uses: actions/checkout@v1

      - name: Enable Developer Command Prompt on Windows
        uses: ilammy/msvc-dev-cmd@v1.7.0

      # No need to install normal Java, you can build application only with GraalVM
      - name: setup GraalVM
        uses: DeLaGuardo/setup-graalvm@4.0
        with:
          graalvm: "21.0.0.2"
          java: "java11"
          arch: 'amd64'

      # (Optional) Install native-image
      - name: install native-image
        run: ${{ matrix.gu-binary }} install native-image

      - name: cache
        uses: actions/cache@v1
        with:
          path: ~/.gradle/caches
          key: gradle-${{ matrix.os }}-${{ hashFiles('build.gradle') }}-${{ hashFiles('gradle/wrapper/gradle-wrapper.properties') }}
          restore-keys: gradle-${{ matrix.os }}-

      # Builds native image
      - name: "build for ${{ matrix.os }}"
        run: ./gradlew nativeImage
        env:
          RUNNING_OS: ${{ matrix.os }}
          PROJECT_VERSION: ${{ steps.config.outputs.projectVersion }}

      # Builds fat jar (only done on Windows so it's only done once)
      - name: "build fat jar"
        run: ./gradlew shadowJar
        if: startsWith(matrix.os, 'windows')
        env:
          RUNNING_OS: ${{ matrix.os }}
          PROJECT_VERSION: ${{ steps.config.outputs.projectVersion }}

      # Uploads binary for mac, ubuntu
      - name: upload ${{ matrix.os }} image
        uses: actions/upload-artifact@v2
        if: startsWith(matrix.os, 'windows') != true
        with:
          name: spotify-playlist-reverser-kt-${{ matrix.os }}
          path: build/bin/spotify-playlist-reverser-kt

      - name: release ${{ matrix.os }} image
        uses: actions/upload-release-asset@v1
        if: startsWith(matrix.os, 'windows') != true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create_release.outputs.upload_url }}
          asset_name: spotify-playlist-reverser-kt-${{ matrix.os }}
          asset_path: build/bin/spotify-playlist-reverser-kt
          asset_content_type: application/octet-stream

      # Uploads binary for windows
      - name: upload windows image
        uses: actions/upload-artifact@v2
        if: startsWith(matrix.os, 'windows')
        with:
          name: spotify-playlist-reverser-kt-${{ matrix.os }}
          path: build/bin/spotify-playlist-reverser-kt.exe

      - name: release windows image
        uses: actions/upload-release-asset@v1
        if: startsWith(matrix.os, 'windows')
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create_release.outputs.upload_url }}
          asset_name: spotify-playlist-reverser-kt.exe
          asset_path: build/bin/spotify-playlist-reverser-kt.exe
          asset_content_type: application/octet-stream

      # Uploads fat jar (only done on Windows so it's only done once)
      - name: upload fat jar
        uses: actions/upload-artifact@v2
        if: startsWith(matrix.os, 'windows')
        with:
          name: spotify-playlist-reverser-kt.jar
          path: build/libs/spotify-playlist-reverser-kt-1.0.0-all.jar

      - name: release fat jar
        uses: actions/upload-release-asset@v1
        if: startsWith(matrix.os, 'windows')
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create_release.outputs.upload_url }}
          asset_name: spotify-playlist-reverser-kt.jar
          asset_path: build/libs/spotify-playlist-reverser-kt-1.0.0-all.jar
          asset_content_type: application/octet-stream